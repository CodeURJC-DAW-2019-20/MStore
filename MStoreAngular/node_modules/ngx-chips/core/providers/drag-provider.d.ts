import { TagInputComponent } from '../../components/tag-input/tag-input';
import { TagModel } from '../accessor';
import * as ɵngcc0 from '@angular/core';
export declare interface DraggedTag {
    index: number;
    tag: TagModel;
    zone: string;
}
export declare interface State {
    dragging: boolean;
    dropping: boolean;
    index: number | undefined;
}
export declare type StateProperty = keyof State;
export declare class DragProvider {
    sender: TagInputComponent;
    receiver: TagInputComponent;
    state: State;
    /**
     * @name setDraggedItem
     * @param event
     * @param tag
     */
    setDraggedItem(event: DragEvent, tag: DraggedTag): void;
    /**
     * @name getDraggedItem
     * @param event
     */
    getDraggedItem(event: DragEvent): DraggedTag | undefined;
    /**
     * @name setSender
     * @param sender
     */
    setSender(sender: TagInputComponent): void;
    /**
     * @name setReceiver
     * @param receiver
     */
    setReceiver(receiver: TagInputComponent): void;
    /**
     * @name onTagDropped
     * @param tag
     * @param indexDragged
     * @param indexDropped
     */
    onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void;
    /**
     * @name setState
     * @param state
     */
    setState(state: {
        [K in StateProperty]?: State[K];
    }): void;
    /**
     * @name getState
     * @param key
     */
    getState(key?: StateProperty): State | State[StateProperty];
    /**
     * @name onDragEnd
     */
    onDragEnd(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DragProvider>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DragProvider>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1wcm92aWRlci5kLnRzIiwic291cmNlcyI6WyJkcmFnLXByb3ZpZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkRBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFnSW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3RhZy1pbnB1dC90YWctaW5wdXQnO1xuaW1wb3J0IHsgVGFnTW9kZWwgfSBmcm9tICcuLi9hY2Nlc3Nvcic7XG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgRHJhZ2dlZFRhZyB7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICB0YWc6IFRhZ01vZGVsO1xuICAgIHpvbmU6IHN0cmluZztcbn1cbmV4cG9ydCBkZWNsYXJlIGludGVyZmFjZSBTdGF0ZSB7XG4gICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgZHJvcHBpbmc6IGJvb2xlYW47XG4gICAgaW5kZXg6IG51bWJlciB8IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWNsYXJlIHR5cGUgU3RhdGVQcm9wZXJ0eSA9IGtleW9mIFN0YXRlO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHJhZ1Byb3ZpZGVyIHtcbiAgICBzZW5kZXI6IFRhZ0lucHV0Q29tcG9uZW50O1xuICAgIHJlY2VpdmVyOiBUYWdJbnB1dENvbXBvbmVudDtcbiAgICBzdGF0ZTogU3RhdGU7XG4gICAgLyoqXG4gICAgICogQG5hbWUgc2V0RHJhZ2dlZEl0ZW1cbiAgICAgKiBAcGFyYW0gZXZlbnRcbiAgICAgKiBAcGFyYW0gdGFnXG4gICAgICovXG4gICAgc2V0RHJhZ2dlZEl0ZW0oZXZlbnQ6IERyYWdFdmVudCwgdGFnOiBEcmFnZ2VkVGFnKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBnZXREcmFnZ2VkSXRlbVxuICAgICAqIEBwYXJhbSBldmVudFxuICAgICAqL1xuICAgIGdldERyYWdnZWRJdGVtKGV2ZW50OiBEcmFnRXZlbnQpOiBEcmFnZ2VkVGFnIHwgdW5kZWZpbmVkO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIHNldFNlbmRlclxuICAgICAqIEBwYXJhbSBzZW5kZXJcbiAgICAgKi9cbiAgICBzZXRTZW5kZXIoc2VuZGVyOiBUYWdJbnB1dENvbXBvbmVudCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQG5hbWUgc2V0UmVjZWl2ZXJcbiAgICAgKiBAcGFyYW0gcmVjZWl2ZXJcbiAgICAgKi9cbiAgICBzZXRSZWNlaXZlcihyZWNlaXZlcjogVGFnSW5wdXRDb21wb25lbnQpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIG9uVGFnRHJvcHBlZFxuICAgICAqIEBwYXJhbSB0YWdcbiAgICAgKiBAcGFyYW0gaW5kZXhEcmFnZ2VkXG4gICAgICogQHBhcmFtIGluZGV4RHJvcHBlZFxuICAgICAqL1xuICAgIG9uVGFnRHJvcHBlZCh0YWc6IFRhZ01vZGVsLCBpbmRleERyYWdnZWQ6IG51bWJlciwgaW5kZXhEcm9wcGVkPzogbnVtYmVyKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBzZXRTdGF0ZVxuICAgICAqIEBwYXJhbSBzdGF0ZVxuICAgICAqL1xuICAgIHNldFN0YXRlKHN0YXRlOiB7XG4gICAgICAgIFtLIGluIFN0YXRlUHJvcGVydHldPzogU3RhdGVbS107XG4gICAgfSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQG5hbWUgZ2V0U3RhdGVcbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICovXG4gICAgZ2V0U3RhdGUoa2V5PzogU3RhdGVQcm9wZXJ0eSk6IFN0YXRlIHwgU3RhdGVbU3RhdGVQcm9wZXJ0eV07XG4gICAgLyoqXG4gICAgICogQG5hbWUgb25EcmFnRW5kXG4gICAgICovXG4gICAgb25EcmFnRW5kKCk6IHZvaWQ7XG59XG4iXX0=