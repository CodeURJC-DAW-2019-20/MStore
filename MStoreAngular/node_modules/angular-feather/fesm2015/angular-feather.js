import { __decorate, __param } from 'tslib';
import { ElementRef, ChangeDetectorRef, Inject, Input, Component, Optional, NgModule } from '@angular/core';

class Icons {
    constructor(icons) {
        this.icons = icons;
    }
}

function uppercamelcase(str) {
    return str.toLowerCase().replace(/(?:^\w|[A-Z]|\b\w)/g, (firstLetter) => {
        return firstLetter.toUpperCase();
    }).replace(/[-_]/g, '');
}

let FeatherComponent = class FeatherComponent {
    constructor(elem, changeDetector, icons) {
        this.elem = elem;
        this.changeDetector = changeDetector;
        this.icons = icons;
    }
    ngOnChanges(changes) {
        // icons are provided as an array of objects because of "multi: true"
        const icons = Object.assign({}, ...this.icons);
        const svg = icons[uppercamelcase(changes.name.currentValue)] || '';
        if (!svg) {
            console.warn(`Icon not found: ${changes.name.currentValue}\n` +
                `Refer to documentation on https://github.com/michaelbazos/angular-feather`);
        }
        this.elem.nativeElement.innerHTML = svg;
        this.changeDetector.markForCheck();
    }
};
FeatherComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: Icons, decorators: [{ type: Inject, args: [Icons,] }] }
];
__decorate([
    Input()
], FeatherComponent.prototype, "name", void 0);
FeatherComponent = __decorate([
    Component({
        // tslint:disable-next-line:component-selector
        selector: 'i-feather, feather-icon',
        template: "<ng-content></ng-content>\n",
        styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}"]
    }),
    __param(2, Inject(Icons))
], FeatherComponent);

var FeatherModule_1;
let FeatherModule = FeatherModule_1 = class FeatherModule {
    constructor(icons) {
        this.icons = icons;
        if (!this.icons) {
            throw new Error(`No icon provided. Make sure to use 'FeatherModule.pick({ ... })' when importing the module\n` +
                `Refer to documentation on https://github.com/michaelbazos/angular-feather`);
        }
    }
    static pick(icons) {
        return {
            ngModule: FeatherModule_1,
            providers: [
                { provide: Icons, multi: true, useValue: icons }
            ]
        };
    }
};
FeatherModule.ctorParameters = () => [
    { type: Icons, decorators: [{ type: Optional }] }
];
FeatherModule = FeatherModule_1 = __decorate([
    NgModule({
        declarations: [
            FeatherComponent
        ],
        exports: [
            FeatherComponent
        ]
    }),
    __param(0, Optional())
], FeatherModule);

/**
 * Generated bundle index. Do not edit.
 */

export { FeatherModule, FeatherComponent as ɵa, Icons as ɵb };
//# sourceMappingURL=angular-feather.js.map
