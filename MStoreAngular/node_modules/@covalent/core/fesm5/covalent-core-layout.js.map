{"version":3,"file":"covalent-core-layout.js","sources":["ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input() cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input() cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input() cardWidth: number = 70;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective, { descendants: true }) _drawerMenu: QueryList<\n    TdNavigationDrawerMenuDirective\n  >;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective, { descendants: true }) _toolbar: QueryList<\n    TdNavigationDrawerToolbarDirective\n  >;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input() sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input() avatar: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      const sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input() name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input() email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n"],"names":[],"mappings":"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"}