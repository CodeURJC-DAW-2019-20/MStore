/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PortalModule } from '@angular/cdk/portal';
import { ScrollingModule } from '@angular/cdk/scrolling';
import { MatIconModule } from '@angular/material/icon';
import { MatRippleModule } from '@angular/material/core';
import { CovalentCommonModule } from '@covalent/core/common';
// Steps
import { TdStepsComponent } from './steps.component';
import { TdStepHeaderComponent } from './step-header/step-header.component';
import { TdStepBodyComponent } from './step-body/step-body.component';
import { TdStepComponent, TdStepLabelDirective, TdStepActionsDirective, TdStepSummaryDirective, } from './step.component';
// Nav Steps
import { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';
import { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';
import { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';
/** @type {?} */
const TD_STEPS = [
    TdStepsComponent,
    TdStepComponent,
    TdStepHeaderComponent,
    TdStepBodyComponent,
    TdStepLabelDirective,
    TdStepActionsDirective,
    TdStepSummaryDirective,
    TdNavStepsHorizontalComponent,
    TdNavStepsVerticalComponent,
    TdNavStepLinkComponent,
];
export class CovalentStepsModule {
}
CovalentStepsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, MatIconModule, MatRippleModule, PortalModule, ScrollingModule, CovalentCommonModule],
                declarations: [TD_STEPS],
                exports: [TD_STEPS],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvdmFsZW50L2NvcmUvc3RlcHMvIiwic291cmNlcyI6WyJzdGVwcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV6RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFHN0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDNUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdEUsT0FBTyxFQUNMLGVBQWUsRUFDZixvQkFBb0IsRUFDcEIsc0JBQXNCLEVBQ3RCLHNCQUFzQixHQUN2QixNQUFNLGtCQUFrQixDQUFDOztBQUcxQixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUMxRyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNwRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7TUFFL0UsUUFBUSxHQUFnQjtJQUM1QixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsb0JBQW9CO0lBQ3BCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsNkJBQTZCO0lBQzdCLDJCQUEyQjtJQUMzQixzQkFBc0I7Q0FDdkI7QUFPRCxNQUFNLE9BQU8sbUJBQW1COzs7WUFML0IsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxlQUFlLEVBQUUsb0JBQW9CLENBQUM7Z0JBQzVHLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFDeEIsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDO2FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFBvcnRhbE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wb3J0YWwnO1xuaW1wb3J0IHsgU2Nyb2xsaW5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XG5cbmltcG9ydCB7IE1hdEljb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pY29uJztcbmltcG9ydCB7IE1hdFJpcHBsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuXG5pbXBvcnQgeyBDb3ZhbGVudENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bjb3ZhbGVudC9jb3JlL2NvbW1vbic7XG5cbi8vIFN0ZXBzXG5pbXBvcnQgeyBUZFN0ZXBzQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGRTdGVwSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwLWhlYWRlci9zdGVwLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGRTdGVwQm9keUNvbXBvbmVudCB9IGZyb20gJy4vc3RlcC1ib2R5L3N0ZXAtYm9keS5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgVGRTdGVwQ29tcG9uZW50LFxuICBUZFN0ZXBMYWJlbERpcmVjdGl2ZSxcbiAgVGRTdGVwQWN0aW9uc0RpcmVjdGl2ZSxcbiAgVGRTdGVwU3VtbWFyeURpcmVjdGl2ZSxcbn0gZnJvbSAnLi9zdGVwLmNvbXBvbmVudCc7XG5cbi8vIE5hdiBTdGVwc1xuaW1wb3J0IHsgVGROYXZTdGVwc0hvcml6b250YWxDb21wb25lbnQgfSBmcm9tICcuL25hdi9uYXYtc3RlcHMtaG9yaXpvbnRhbC9uYXYtc3RlcHMtaG9yaXpvbnRhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGROYXZTdGVwc1ZlcnRpY2FsQ29tcG9uZW50IH0gZnJvbSAnLi9uYXYvbmF2LXN0ZXBzLXZlcnRpY2FsL25hdi1zdGVwcy12ZXJ0aWNhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGROYXZTdGVwTGlua0NvbXBvbmVudCB9IGZyb20gJy4vbmF2L25hdi1zdGVwLWxpbmsvbmF2LXN0ZXAtbGluay5jb21wb25lbnQnO1xuXG5jb25zdCBURF9TVEVQUzogVHlwZTxhbnk+W10gPSBbXG4gIFRkU3RlcHNDb21wb25lbnQsXG4gIFRkU3RlcENvbXBvbmVudCxcbiAgVGRTdGVwSGVhZGVyQ29tcG9uZW50LFxuICBUZFN0ZXBCb2R5Q29tcG9uZW50LFxuICBUZFN0ZXBMYWJlbERpcmVjdGl2ZSxcbiAgVGRTdGVwQWN0aW9uc0RpcmVjdGl2ZSxcbiAgVGRTdGVwU3VtbWFyeURpcmVjdGl2ZSxcbiAgVGROYXZTdGVwc0hvcml6b250YWxDb21wb25lbnQsXG4gIFRkTmF2U3RlcHNWZXJ0aWNhbENvbXBvbmVudCxcbiAgVGROYXZTdGVwTGlua0NvbXBvbmVudCxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIE1hdEljb25Nb2R1bGUsIE1hdFJpcHBsZU1vZHVsZSwgUG9ydGFsTW9kdWxlLCBTY3JvbGxpbmdNb2R1bGUsIENvdmFsZW50Q29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbVERfU1RFUFNdLFxuICBleHBvcnRzOiBbVERfU1RFUFNdLFxufSlcbmV4cG9ydCBjbGFzcyBDb3ZhbGVudFN0ZXBzTW9kdWxlIHt9XG4iXX0=