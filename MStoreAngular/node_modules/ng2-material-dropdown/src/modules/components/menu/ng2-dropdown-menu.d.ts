import { ElementRef, Renderer2, QueryList } from '@angular/core';
import { Ng2MenuItem } from '../menu-item/ng2-menu-item';
import { DropdownStateService } from '../../services/dropdown-state.service';
import * as ɵngcc0 from '@angular/core';
export declare class Ng2DropdownMenu {
    dropdownState: DropdownStateService;
    private element;
    private renderer;
    /**
     * @name width
     */
    width: number;
    /**
     * @description if set to true, the first element of the dropdown will be automatically focused
     * @name focusFirstElement
     */
    focusFirstElement: boolean;
    /**
     * @description sets dropdown offset from the button
     * @name offset {string} follow format '<number> <number>' ex. '0 20'
     */
    offset: string;
    /**
     * @name appendToBody
     */
    appendToBody: boolean;
    /**
     * @name zIndex
     */
    zIndex: number;
    /**
     * @name items
     */
    items: QueryList<Ng2MenuItem>;
    private position;
    private listeners;
    constructor(dropdownState: DropdownStateService, element: ElementRef, renderer: Renderer2);
    /**
     * @name show
     * @shows menu and selects first item
     */
    show(position?: ClientRect, dynamic?: boolean): void;
    /**
     * @name hide
     * @desc hides menu
     */
    hide(): void;
    /**
     * @name updatePosition
     * @desc updates the menu position every time it is toggled
     * @param position {ClientRect}
     * @param dynamic {boolean}
     */
    updatePosition(position: ClientRect, dynamic: boolean): void;
    /**
     * @name handleKeypress
     * @desc executes functions on keyPress based on the key pressed
     * @param $event
     */
    handleKeypress($event: any): void;
    /**
     * @name getMenuElement
     */
    private getMenuElement;
    /**
     * @name calcPositionOffset
     * @param position
     */
    private calcPositionOffset;
    private applyOffset;
    ngOnInit(): void;
    updateOnChange(dynamic?: boolean): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Ng2DropdownMenu>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Ng2DropdownMenu, "ng2-dropdown-menu", never, {
    "width": "width";
    "focusFirstElement": "focusFirstElement";
    "appendToBody": "appendToBody";
    "zIndex": "zIndex";
    "offset": "offset";
}, {}, ["items"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLWRyb3Bkb3duLW1lbnUuZC50cyIsInNvdXJjZXMiOlsibmcyLWRyb3Bkb3duLW1lbnUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZzJNZW51SXRlbSB9IGZyb20gJy4uL21lbnUtaXRlbS9uZzItbWVudS1pdGVtJztcbmltcG9ydCB7IERyb3Bkb3duU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZHJvcGRvd24tc3RhdGUuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZzJEcm9wZG93bk1lbnUge1xuICAgIGRyb3Bkb3duU3RhdGU6IERyb3Bkb3duU3RhdGVTZXJ2aWNlO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIHdpZHRoXG4gICAgICovXG4gICAgd2lkdGg6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24gaWYgc2V0IHRvIHRydWUsIHRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSBkcm9wZG93biB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgZm9jdXNlZFxuICAgICAqIEBuYW1lIGZvY3VzRmlyc3RFbGVtZW50XG4gICAgICovXG4gICAgZm9jdXNGaXJzdEVsZW1lbnQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIHNldHMgZHJvcGRvd24gb2Zmc2V0IGZyb20gdGhlIGJ1dHRvblxuICAgICAqIEBuYW1lIG9mZnNldCB7c3RyaW5nfSBmb2xsb3cgZm9ybWF0ICc8bnVtYmVyPiA8bnVtYmVyPicgZXguICcwIDIwJ1xuICAgICAqL1xuICAgIG9mZnNldDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIGFwcGVuZFRvQm9keVxuICAgICAqL1xuICAgIGFwcGVuZFRvQm9keTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAbmFtZSB6SW5kZXhcbiAgICAgKi9cbiAgICB6SW5kZXg6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBpdGVtc1xuICAgICAqL1xuICAgIGl0ZW1zOiBRdWVyeUxpc3Q8TmcyTWVudUl0ZW0+O1xuICAgIHByaXZhdGUgcG9zaXRpb247XG4gICAgcHJpdmF0ZSBsaXN0ZW5lcnM7XG4gICAgY29uc3RydWN0b3IoZHJvcGRvd25TdGF0ZTogRHJvcGRvd25TdGF0ZVNlcnZpY2UsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIHNob3dcbiAgICAgKiBAc2hvd3MgbWVudSBhbmQgc2VsZWN0cyBmaXJzdCBpdGVtXG4gICAgICovXG4gICAgc2hvdyhwb3NpdGlvbj86IENsaWVudFJlY3QsIGR5bmFtaWM/OiBib29sZWFuKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBoaWRlXG4gICAgICogQGRlc2MgaGlkZXMgbWVudVxuICAgICAqL1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSB1cGRhdGVQb3NpdGlvblxuICAgICAqIEBkZXNjIHVwZGF0ZXMgdGhlIG1lbnUgcG9zaXRpb24gZXZlcnkgdGltZSBpdCBpcyB0b2dnbGVkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uIHtDbGllbnRSZWN0fVxuICAgICAqIEBwYXJhbSBkeW5hbWljIHtib29sZWFufVxuICAgICAqL1xuICAgIHVwZGF0ZVBvc2l0aW9uKHBvc2l0aW9uOiBDbGllbnRSZWN0LCBkeW5hbWljOiBib29sZWFuKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBoYW5kbGVLZXlwcmVzc1xuICAgICAqIEBkZXNjIGV4ZWN1dGVzIGZ1bmN0aW9ucyBvbiBrZXlQcmVzcyBiYXNlZCBvbiB0aGUga2V5IHByZXNzZWRcbiAgICAgKiBAcGFyYW0gJGV2ZW50XG4gICAgICovXG4gICAgaGFuZGxlS2V5cHJlc3MoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIGdldE1lbnVFbGVtZW50XG4gICAgICovXG4gICAgcHJpdmF0ZSBnZXRNZW51RWxlbWVudDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBjYWxjUG9zaXRpb25PZmZzZXRcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBwcml2YXRlIGNhbGNQb3NpdGlvbk9mZnNldDtcbiAgICBwcml2YXRlIGFwcGx5T2Zmc2V0O1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlT25DaGFuZ2UoZHluYW1pYz86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=